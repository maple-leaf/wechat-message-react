{"version":3,"file":"static/webpack/static/development/pages/index.js.54765ecb6842e64d47ef.hot-update.js","sources":["webpack:///./components/image-message.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { Role } from './wechat-message';\nimport styled from 'styled-components';\n\nexport interface IImageMessage {\n    thumbnail: string,\n    image: string,\n    type: 'image',\n    role: Role,\n}\nexport interface ImageMessageProps {\n    message: IImageMessage,\n    className?: string,\n}\n\nconst StyledImageMessageThumb = styled.img`\n    max-width: 60px;\n`;\n\nconst StyledImageMessageViewer = styled.div.attrs(props => ({\n    style: {\n        left: `${props.rect.left}px`,\n        width: `${props.rect.width}px`,\n        top: `${props.rect.top}px`,\n        height: `${props.rect.height}px`,\n    }\n}))`\n    position: fixed;\n    pointer-events: none;\n\n    &:after {\n        content: \"\";\n        background: rgba(0, 0, 0, .6);\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n    }\n`;\n\nconst ImageMessage = ({ message }: ImageMessageProps):React.ReactElement => {\n    const [visible, setVisible] = useState(false);\n    const rect = useMemo(() => {\n        const container = document.body.querySelector('#panelContent');\n        return container.getBoundingClientRect();\n    });\n    return (\n        <>\n            <StyledImageMessageThumb src={message.thumbnail} onClick={() => setVisible(true)}/>\n            {\n                    visible\n                        ? (\n                            <StyledImageMessageViewer rect={rect}>\n                                <img src={message.image}/>\n                            </StyledImageMessageViewer>\n                        )\n                        : null\n            }\n        </>\n    )\n}\n\nexport default ImageMessage;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAqBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}