{"version":3,"file":"static/webpack/static/development/pages/index.js.9c963cc5b29c32fdde09.hot-update.js","sources":["webpack:///./components/wechat-panel.tsx"],"sourcesContent":["import { useState } from 'react';\nimport styled from \"styled-components\";\nimport { Role, MessageStatus, IMessage } from \"./wechat-message\";\nimport WeChatMessageBridge from './wechat-message-bridge';\nimport Button from './button';\n\nconst messages = [{\n    id: 1,\n    content: \"test1\",\n    role: Role.sender,\n    type: \"normal\",\n    author: {\n        name: '枫叶'\n    }\n},\n{\n    id: 2,\n    content: \"google.com\",\n    role: Role.sender,\n    type: \"normal\",\n    status: MessageStatus.loading,\n    author: {\n        name: '枫叶',\n        hasNewVideo: true,\n    }\n},\n{\n    id: 3,\n    title: \"NO TITLE\",\n    desc: \"test\",\n    url: 'http://example.com',\n    thumbnail:\n        \"//cdn.devdocs.io/assets/sprites/docs@2x-cdcc6bcba322c1a0ccc60722f8ad8e37ea4fc4a4c2701736d9f283ac876d89b1.png\",\n    role: Role.recevier,\n    type: \"link\",\n    status: MessageStatus.failed,\n    author: {\n        name: '叶枫'\n    }\n}, {\n    id: 4,\n    title: \"Upvote Me\",\n    desc: \"This behaviour is only supported within the context of Styled Components\",\n    upvote: 0,\n    downvote: 0,\n    role: Role.recevier,\n    type: \"vote\",\n    author: {\n        name: '叶枫'\n    }\n}];\n\ninterface StyledProps {\n    className?: string;\n}\n\ninterface TitleProps extends StyledProps {\n    title: string;\n}\n\ninterface MessagesProps extends StyledProps {\n    messages: IMessage[];\n}\n\nconst PanelTitle = (props: TitleProps): React.ReactElement => {\n    return <h4 className={props.className}>{props.title}</h4>;\n};\nconst StyledPanelTitle = styled(PanelTitle)`\n    font-size: 14px;\n    color: #000;\n    background-color: #e5eaea;\n    text-align: center;\n    flex: 0 0 40px;\n    line-height: 40px;\n    margin: 0;\n`;\n\nconst panelContent = ({ className, messages }: MessagesProps): React.ReactElement => {\n    return (\n        <div className={className} id=\"panelContent\">\n            { messages.map(\n                message => <WeChatMessageBridge message={message} key={message.id.toString()}/>\n            ) }\n        </div>\n    );\n};\nconst StyledPanelContent = styled(panelContent)`\n    font-size: 14px;\n    color: #000;\n    background-color: #ededed;\n    flex: 1;\n    padding-top: 10px;\n    position: relative;\n    overflow: auto;\n`;\n\nconst panelFooter = ({ className, onClick }: StyledProps): React.ReactElement => {\n    return (\n        <div className={className}>\n            <Button onClick={\n                () => onClick({type: 'addMessage', data: {content: '生日快乐', type: 'normal'}})\n            }>生日快乐</Button>\n            <Button onClick={\n                () => onClick({type: 'addMessage', data: { title: 'Learn React', desc: 'how to use react?', type: 'link', url: 'example.com' }})\n            }>链接信息</Button>\n            <Button onClick={\n                    () => onClick({\n                        type: 'addMessage',\n                        data: {\n                            type: 'image',\n                            thumbnail:\n                                      \"//cdn.devdocs.io/assets/sprites/docs@2x-cdcc6bcba322c1a0ccc60722f8ad8e37ea4fc4a4c2701736d9f283ac876d89b1.png\",\n                            image:\n                                      \"//cdn.devdocs.io/assets/sprites/docs@2x-cdcc6bcba322c1a0ccc60722f8ad8e37ea4fc4a4c2701736d9f283ac876d89b1.png\",\n                        }\n                    })\n            }>图片信息</Button>\n            <Button onClick={\n                    () => onClick({\n                        type: 'addMessage',\n                        data: {\n                            type: 'envelope',\n                            role: Role.system,\n                            takeBy: '枫叶',\n                            envelopeId: 123,\n                        }\n                    })\n            }>红包被抢信息</Button>\n        </div>\n    );\n};\n\nconst StyledPanelFooter = styled(panelFooter)`\n    background-color: #f6f6f6;\n    display: flex;\n    align-items: center;\n    flex: 0 0 80px;\n    padding: 8px;\n    box-sizing: border-box;\n\n    button {\n        padding: 8px;\n    }\n`;\n\nconst WeChatPanel = ({ className }: StyledProps): React.ReactElement => {\n    const [_messages, setMessages] = useState(messages);\n\n    const lazyAddMessages = (function() {\n        let lastTimeStamp = 0;\n        let timer;\n        let addedMessages = [];\n\n        return (message: IMessage | IMessage[]) => {\n            const timeStamp = Date.now();\n\n            if (Array.isArray) {\n                addedMessages = addedMessages.concat(message);\n            } else {\n                addedMessages.push(message);\n            }\n            lastTimeStamp = timeStamp;\n\n            clearTimeout(timer);\n\n            timer = setTimeout(() => {\n                if (timeStamp === lastTimeStamp) {\n                    setMessages([\n                        ..._messages,\n                        ...addedMessages,\n                    ]);\n                }\n            }, 300)\n        }\n    })()\n\n    const onFooterClick = ({ type, data }) => {\n        switch(type) {\n            case 'addMessage':\n                lazyAddMessages({\n                    id: Date.now(),\n                    ...data,\n                    role: data.role ? data.role : (Math.random() > 0.5 ? Role.sender : Role.recevier),\n                    author: {\n                        name: '枫叶'\n                    }\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    \n    return (\n        <div className={className}>\n            <StyledPanelTitle title=\"枫叶\"/>\n            <StyledPanelContent messages={_messages}/>\n            <StyledPanelFooter onClick={onFooterClick}/>\n        </div>\n    );\n};\n\nconst StyledWeChatPanel = styled(WeChatPanel)`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport default StyledWeChatPanel;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AACA;AAwBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAJA;AAFA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAJA;AAQA;AACA;AAAA;AACA;AAZA;AAcA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}