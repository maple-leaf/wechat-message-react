{"version":3,"file":"static/webpack/static/development/pages/index.js.6fb15e67b9595231b5c2.hot-update.js","sources":["webpack:///./components/wechat-message.tsx"],"sourcesContent":["import { useState } from 'react';\nimport styled from \"styled-components\";\nimport Loading from './loading';\n\nconst isLink = (str: string | undefined): boolean =>\n    str ? /^(https?:)?(\\/\\/)?\\w+\\.\\w+$/.test(str) : false;\n\ninterface StyledProps {\n    className?: string;\n}\nexport enum Role {\n    sender,\n    recevier,\n    system\n}\n\nexport enum MessageStatus {\n    loading,\n    sent,\n    failed,\n    read\n}\n\nexport interface IAuthor {\n    name: string;\n    thumbnail?: string;\n}\n\nexport interface IMessage {\n    content?: string;\n    type: string;\n    role: Role;\n    status: MessageStatus;\n    author: IAuthor;\n}\n\nexport interface MessageProps extends StyledProps, React.HTMLAttributes<HTMLElement> {\n    message: IMessage;\n    render?: (message: IMessage) => React.ReactNode;\n    messagePrefix?: (message: IMessage) => React.ReactNode;\n    messagePostfix?: (message: IMessage) => React.ReactNode;\n}\n\nconst MessageBlock = styled.div`\n    display: flex;\n    justify-content: ${props =>\n        props.role === Role.sender ? \"flex-end\" : \"flex-start\"};\n    align-items: flex-start;\n    color: #000;\n    font-size: 14px;\n    margin: 0 10px;\n    position: relative;\n`;\n\nconst MessageItem = ({ className, message, render, onClick }: MessageProps) => {\n    const renderFn = render || (() => message.content);\n    return <div className={className} onClick={onClick}>{renderFn(message)}</div>;\n};\nconst StyledMessageItem = styled(MessageItem)`\n    border-radius: 4px;\n    background-color: ${props => props.message.role === Role.sender ? \"#95ec69\" : \"#fff\"};\n    padding: 10px;\n    max-width: 80%;\n    color: ${props => (isLink(props.message.content) ? \"#2782d7\" : \"#000\")};\n    order: 1;\n    position: relative;\n\n    &:before {\n        content: \"\";\n        border-width: 6px;\n        border-style: solid;\n        border-color: transparent;\n        position: absolute;\n        top: 10px;\n        ${props => props.message.role === Role.sender ? {\n            'border-left-color': '#95ec69',\n            right: '-12px',\n        } : {\n            'border-right-color': '#fff',\n            left: '-12px',\n        }};\n    }\n`;\n\ninterface PrefixProps {\n    className?: string,\n    message: IMessage,\n    onFailedClick: () => void,\n}\n\nconst MessagePrefix = ({ className, message, onFailedClick }: PrefixProps) => {\n    if (message.status === MessageStatus.loading) {\n        return (\n            <Loading className={className}/>\n        );\n    } else if (message.status === MessageStatus.failed) {\n        return <span className={className} onClick={onFailedClick}>!</span>;\n    }\n\n    return null;\n};\n\nconst failedMark = {\n    background: '#b52f4c',\n    'font-size': '12px',\n    width: '18px',\n    height: '18px',\n    color: '#fff',\n    'text-align': 'center',\n    'line-height': '18px',\n    'border-radius': '50%',\n    cursor: 'pointer',\n}\n\nconst StyledMessagePrefix = styled(MessagePrefix)`\n    order: ${props => (props.message.role === Role.sender ? 0 : 2)};\n    margin: 0 8px;\n    ${\n        props => props.message.status === MessageStatus.failed ? failedMark : {\n            width: '24px',\n            height: '24px',\n        }\n    }\n`;\n\nconst MessagePostfix = ({ className, message }: MessageProps) => {\n    const { author } = message;\n    return (\n        <a href=\"#\" className={className}>\n            { author.thumbnail ? <img src={author.thumbnail}/> : author.name.substring(0, 1) }\n        </a>\n    )\n};\n\nconst StyledMessagePostfix = styled(MessagePostfix)`\n    font-size: 24px;\n    color: #000;\n    display: block;\n    height: 48px;\n    line-height: 48px;\n    text-align: center;\n    flex: 0 0 48px;\n    border-radius: 4px;\n    background-color: #fff;\n    text-decoration: none;\n    ${props => (props.message.role === Role.sender ? {\n        'margin-left': '12px',\n        order: 2,\n    } : {\n        'margin-right': '12px',\n        order: 0,\n    })};\n\n    img {\n        max-width: 100%;\n        max-height: 100%;\n    }\n`;\n\nconst AlignCenter = styled.div`\n    display: flex;\n    align-items: center;\n    order: 1;\n`;\n\n\nconst WeChatMessage = ({\n    className,\n    message,\n    render,\n    onClick,\n    messagePrefix,\n    messagePostfix\n}: MessageProps) => {\n    const [_message, setMessage] = useState(message);\n\n    const defaultPostfix = () => <StyledMessagePostfix message={_message} />;\n    const defaultPrefix = () =>\n                <StyledMessagePrefix message={_message}\n                    onFailedClick={() => setMessage({\n                        ..._message,\n                        status: MessageStatus.loading\n                    })}\n                />;\n    const Prefix = messagePrefix;\n    const Postfix = messagePostfix;\n    \n    return (\n        <MessageBlock\n            role={_message.role}\n            className={className}\n        >\n            <AlignCenter>\n                {Prefix ? (\n                    <Prefix message={_message} defaultRender={defaultPrefix}/>\n                ) : defaultPrefix()}\n                <StyledMessageItem message={_message} render={render} onClick={onClick}/>\n            </AlignCenter>\n            {Postfix ? (\n                <Postfix message={_message} defaultRender={defaultPostfix}/>\n            ) : defaultPostfix()}\n        </MessageBlock>\n    );\n};\n\nexport { MessageBlock, StyledMessageItem as MessageItem };\n\nexport default WeChatMessage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA0BA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAHA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAFA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAHA;AAcA;AAAA;AAAA;AAAA;AACA;AAMA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAFA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAMA;AACA;AAEA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;;;;A","sourceRoot":""}